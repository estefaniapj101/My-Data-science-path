 -- table ---- subscriptions
 -- columms
    --id, subscription_start, subscription_end, segment

select * from subscriptions
limit 1;
---we got 4 colums

-- from 2016-12-01
-- until 2017-03-30
select min(subscription_start), max(subscription_start) from subscriptions;

With months as (
  select   
    '2017-01-01' AS first_day, 
    '2017-01-31' AS last_day 
  UNION 
  SELECT 
    '2017-02-01' AS first_day, 
    '2017-02-28' AS last_day 
  UNION 
  SELECT 
    '2017-03-01' AS first_day, 
    '2017-03-31' AS last_day
),

cross_join as (
  select * from subscriptions 
  cross join  months),
  
  status as (
    select 
    id, 
    first_day as month,
case when 
  (subscription_start < first_day) 
  AND ( subscription_end > first_day OR subscription_end IS NULL ) 
  AND (segment = 87) 
  THEN 1 
  ELSE 0 
  END AS is_active_87,

case when
  (subscription_start < first_day) 
  AND ( subscription_end > first_day OR subscription_end IS NULL ) 
  AND (segment = 30) 
  THEN 1 
  ELSE 0 
  END AS is_active_30,

CASE WHEN 
  (subscription_end 
  BETWEEN first_day AND last_day) 
  and (segment = 87) 
  THEN 1 
  ELSE 0 
  END AS is_canceled_87,

CASE WHEN 
  (subscription_end 
  BETWEEN first_day AND last_day) 
  and (segment = 30) 
  THEN 1 
  ELSE 0 
  END AS is_canceled_30
  FROM cross_join
),

status_aggregate as (
  select 
  month,
  sum(is_active_87) as sum_active_87,
  sum(is_active_30) as sum_active_30,
  sum(is_canceled_87) as sum_canceled_87,
  sum(is_canceled_30) as sum_canceled_30
  from status
  group by month)

SELECT
month,
  1.0 * sum_canceled_30 / sum_active_30 AS churn_rate_30,
  1.0 * sum_canceled_87 / sum_active_87 AS churn_rate_87
FROM status_aggregate;



